services:
  nifi:
    image: apache/nifi:2.0.0.M4
    container_name: nifi
    hostname: nifi
    ports:
      - '9443:9443'
    deploy:
      resources:
        limits:
          cpus: '4'  # Limita o uso de CPU
          memory: 3G  # Limita o uso de memória
        reservations:
          cpus: '2'  # Reserva pelo menos
          memory: 2G  # Reserva pelo menos
    volumes:
#      - ./jar:/opt/jdbc
#      - ./nifi/certs:/opt/certs
#      - ./nifi/logs:/opt/nifi/nifi-current/logs/
      - ./metastore/hive-site.xml:/opt/nifi/nifi-current/core-site.xml
      - ./nifi/properties:/opt/nifi/nifi-current/properties  #credentials.properties (minio)
#      - ./nifi/db/database_repository:/opt/nifi/nifi-current/database_repository
#      - ./nifi/db/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
#      - ./nifi/db/content_repository:/opt/nifi/nifi-current/content_repository
#      - ./nifi/db/provenance_repository:/opt/nifi/nifi-current/provenance_repository
    environment:
      NIFI_WEB_HTTPS_PORT: 9443
      SINGLE_USER_CREDENTIALS_USERNAME: admin
      SINGLE_USER_CREDENTIALS_PASSWORD: 123456789012

    # Alterar senha:   ./bin/nifi.sh set-single-user-credentials admin "123456789012"
#      AUTH: ldap
#      KEYSTORE_PATH: /opt/certs/keystore.jks
#      KEYSTORE_TYPE: JKS
#      KEYSTORE_PASSWORD: mc9ma59MMjzR7bzwMWaawzFY54dImQsU/0kzoG4/cwA
#      TRUSTSTORE_PATH: /opt/certs/truststore.jks
#      TRUSTSTORE_PASSWORD: DmcapSeFlqnpouWKHgKG8csXwsHqb0ivjWdbzn0UrfM
#      TRUSTSTORE_TYPE: JKS
#      INITIAL_ADMIN_IDENTITY: 'cn=nifiadmin,ou=users,dc=nfs,dc=org'
#      LDAP_AUTHENTICATION_STRATEGY: 'SIMPLE'
#      LDAP_MANAGER_DN: 'cn=admin,dc=nfs,dc=org'
#      LDAP_MANAGER_PASSWORD: 'adminpassword'
#      LDAP_USER_SEARCH_BASE: 'ou=users,dc=nfs,dc=org'
#      LDAP_USER_SEARCH_FILTER: 'uid={0}'
#      LDAP_IDENTITY_STRATEGY: 'USE_DN'
#      LDAP_URL: 'ldap://openldap:1389'
#    depends_on:
#      - openldap
    networks:
      - network

    #Gerar Certificados:
#     docker exec -u 0 -it nifi sh -c "/opt/nifi/nifi-toolkit-current/bin/tls-toolkit.sh standalone -n 'localhost' -B '123456789012' -C 'CN=nifiadmin,OU=NFS' -O &&
#     mv /opt/nifi/nifi-current/localhost/* /opt/certs/ &&
#     mv /opt/nifi/nifi-current/nifi-* /opt/certs/"

# Servidor de Autenticação
#  openldap:
#      image: bitnami/openldap:latest
#      container_name: openldap
#      hostname: openldap
#      environment:
#        LDAP_ORGANISATION: nfs
#        LDAP_DOMAIN: nfs.org
#        LDAP_ADMIN_USERNAME: 'admin'
#        LDAP_ADMIN_PASSWORD: 'adminpassword'
#        LDAP_USERS: 'nifiadmin, user1, user2, user3'
#        LDAP_PASSWORDS: 'nifiadmin, user1, user2, user3'
#        LDAP_ROOT: 'dc=nfs,dc=org'
#        LDAP_ADMIN_DN: 'cn=admin,dc=nfs,dc=org'
#      ports:
#        - '1389:1389'
#        - '1636:1636'
#      networks:
#        - network

  postgres:
    image: 'postgres:latest'
    hostname: postgres
    container_name: postgres
    expose:
      - '5432'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: hive_db
    networks:
      - network

  minio:
    image: 'minio/minio:latest'
    hostname: minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server --console-address ":9001" /data
    networks:
      - network
      
  minio-mc:
    image: minio/mc:latest
    container_name: minio-mc
    depends_on:
      - minio
    entrypoint: |
      sh -c "
      sleep 10 &&
      mc alias set myminio http://minio:9000 minio minio123 &&
      mc mb myminio/landing &&
      mc mb myminio/bronze &&
      mc mb myminio/silver &&
      mc mb myminio/gold &&
      mc mb myminio/warehouse &&
      mc policy set public myminio/warehouse
      "
    networks:
      - network


  hive-metastore:
    image: 'apache/hive:4.0.1'
    hostname: hive-metastore
    container_name: hive-metastore
    ports:
      - '9083:9083' # Metastore Thrift
    volumes:
      - ./metastore/hive-site.xml:/opt/hive/conf/hive-site.xml:ro
      - ./jar/postgresql-42.7.4.jar:/opt/hive/lib/postgresql-42.7.4.jar
      - ./jar/aws-java-sdk-bundle-1.12.367.jar:/opt/hive/lib/aws-java-sdk-bundle-1.12.648.jar
      - ./jar/hadoop-aws-3.3.6.jar:/opt/hive/lib/hadoop-aws-3.3.6.jar
    environment:
      - SERVICE_NAME=metastore
      - DB_DRIVER=postgres
      - DB_HOST=postgres                 # Nome do serviço PostgreSQL (deve corresponder ao nome do serviço abaixo)
      - DB_PORT=5432                     # Porta padrão do PostgreSQL
      - DB_NAME=hive_db                  # Nome do banco de dados no PostgreSQL
      - DB_USER=admin                    # Usuário do banco de dados PostgreSQL
      - DB_PASS=admin                    # Senha do banco de dados PostgreSQL
    depends_on:
      - minio-mc
      - postgres
    networks:
      - network

  trino:
    image: 'trinodb/trino:410'
    hostname: trino
    container_name: trino
    ports:
      - '8080:8080'
    volumes:
      - ./trino/etc:/etc/trino/:ro
      - ./trino/conf/core-hive.xml:/usr/lib/trino/plugin/hive/core-site.xml
      - ./jar/postgresql-42.7.4.jar:/usr/lib/trino/plugin/hive/postgresql-42.7.4.jar
      - ./jar/aws-java-sdk-bundle-1.12.367.jar:/usr/lib/trino/plugin/hive/aws-java-sdk-bundle-1.12.367.jar
    depends_on:
      - minio-mc
      - hive-metastore
    networks:
      - network

volumes:
  minio-data:
    driver: local

networks:
  network:
    name: network
    driver: bridge

